<?xml version="1.0" encoding="ISO-8859-1"?>

<product productid="amember" active="1">
	<title>aMember Pro Integration</title>
	<description>Intergration with aMember Pro membership/suibscription script</description>
	<version>1.1</version>
	<url>http://www.amember.com/p/Integration/vBulletin</url>
	<versioncheckurl />
	<dependencies>
	</dependencies>
	<codes>
		<code version="1.0">
			<installcode><![CDATA[$r = $db->query_first("SELECT * FROM ".TABLE_PREFIX."user LIMIT 1");
if (!array_key_exists('amemberid', $r)){
  $db->query("ALTER TABLE " . TABLE_PREFIX  .   
  "user ADD amemberid INT NULL");
}]]></installcode>
			<uninstallcode><![CDATA[$r = $db->query_first("SELECT * FROM ".TABLE_PREFIX."user LIMIT 1");
if (array_key_exists('amemberid', $r)){
  $db->query("ALTER TABLE " . TABLE_PREFIX .     
  "user DROP amemberid");
}]]></uninstallcode>
		</code>
	</codes>
	<templates>
	</templates>
	<plugins>
		<plugin active="1" executionorder="5">
			<title><![CDATA[Display "aMember Pro Integration" menu]]></title>
			<hookname>admin_index_navigation</hookname>
			<phpcode><![CDATA[$navigation[999]["aMember Integration"] = array(
'options' => array(
    10 => array('Export Users' => array(
        'displayorder' => 10,
        'phrase'       => 'export_users' ,
        'link'         => 'misc.php?do=amember_export_users',
        'text'         => 'Export Users'
    ))),
'group' => array(
    'phrase' => 'amember_integration',
    'permissions' => 'canadminstyles',
    'displayorder' => 999,
    'nav_file'     => 'vbulletin',
    'text'         => 'aMember Integration',
),    
);]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Do users export for aMember</title>
			<hookname>admin_maintenance</hookname>
			<phpcode><![CDATA[function get_users_for_amember(){
    global $db;
    $searchquery = "
       SELECT username, email
       FROM " . TABLE_PREFIX . "user AS user
       LEFT JOIN ".TABLE_PREFIX."usergroup AS usergroup USING (usergroupid)
       WHERE usergroup.adminpermissions = 0
       AND (user.amemberid <= 0 OR user.amemberid IS NULL)
       ";
    return $db->query_read($searchquery);
}


function do_amember_export(){
echo <<<CUT
<b>Import users from vBulletin to aMember</b>
<p>This option allows you to get list of vBulletin users (that are not
yet added in aMember), and download it as a CSV (comma-separated) text
file. You can then save it, and upload to aMember CP -> Import.</p>
<b>NOTE. This function does not export admin users.</b>
CUT;

$q = get_users_for_amember();
print "<br><textarea cols=40 rows=10 readonly=readonly id='txt'>";
while ($u = mysql_fetch_assoc($q)){
print "$u[username];$u[email]\n";
}
echo <<<CUT
</textarea><br>
<a href="javascript:copyToClipboard();">Copy to clipboard</a>
<br>

<script type="text/javascript">
function copyToClipboard(){
   el = document.getElementById('txt');
   el.focus();
   el.select();
   CopiedTxt = document.selection.createRange();
   CopiedTxt.execCommand("Copy");
}
</script>
<br>
<b>HOW-TO Import users to aMember</b>
<ol>
<li>Run Notepad, copy text from the box above, and paste to the Notepad.
Save it as a text file.
<li>Go to aMember CP. Make sure you have a product that is applicable to your
current members. It can be a product with price = 0.0 named "Forum Subscription"
or something like that, applicable to your needs. If you want to grant a paid
subscription to your existing customers, it is also possible. Just create a
necessary product, and set "vBulletin Access" field accordingly.
<li>Go to aMember CP -> Import, set the following:
<ul>
    <li><b>Username</b>: Field 1
    <li><b>Password</b>: Generate
    <li><b>EMail</b>: Field 2
    <li><b>Subscription Type</b>: set to a product as discussed above
    <li><b>Subscription Begin Date</b>: Fixed, set to today date or for example 2005-01-01
    <li><b>Subscription Expire Date</b>: Fixed, set to 2037-12-31 (it stands for "lifetime" subscription),
    or to desired date when this granted subscription will expire
    <li><b>Subscription Payment System</b>: set "Manual"
    <li><b>Subscription Receipt#</b>: set Fixed, IMPORT
</ul>
Other fields keep default, and press <b>Submit</b>. After confirmation, all members from the 
list will be added into aMember with new passwords (it is impossible to decode 
vBulletin passwords, or use it for aMember).
<li>Go to aMember CP -> Browse Users, and make sure all users are imported,
and have an active subscription to a product you created;
<li>Once you click aMember CP -> Rebuild Db, all users will be back-ported
to vBulletin, they will be assigned a usergroup that is applicable for 
their aMember subscription (configured "vBulletin Access" field), and 
new generated passwords
<li>Go to aMember CP -> E-Mail Users, select All Users (we are talking about
clean new aMember installation without users, are we?), and send a e-mail
message to all your customers with their new passwords. You may insert
{\$user.login} and  {\$user.pass} that will be replaced with actual username
and password for each user.
<li>It is all - import users from vBulletin to aMember finished.
</ol>
CUT;
}


if ($_REQUEST['do'] == 'amember_export_users'){
   do_amember_export();
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Login member to aMember when he is verified in vB3</title>
			<hookname>login_verify_success</hookname>
			<phpcode><![CDATA[session_start();
$_ui = fetch_userinfo($vbulletin->userinfo['userid']);
if ($_ui['amemberid'] && (empty($_SESSION['_amember_login']) || empty($_SESSION['_amember_pass']))){
  $_SESSION['_amember_login'] = $username;
  $_SESSION['_amember_pass'] = iif($md5password!='', $md5password, $md5password_utf);
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Logout user from aMember when he logs out from vBulletin (actually redirect to aMember logout)</title>
			<hookname>logout_process</hookname>
			<phpcode><![CDATA[if ($vbulletin->userinfo['amemberid']){
exec_header_redirect($vbulletin->options['amemberurl'] . "/logout.php");
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Update password - redirect to aMember</title>
			<hookname>profile_editpassword_start</hookname>
			<phpcode><![CDATA[if ($vbulletin->userinfo['amemberid']){
  $vbulletin->url = $vbulletin->options['amemberurl'] . '/profile.php';
     eval(print_standard_redirect('redirect_amember_profile', true, true));  
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Update password - redirect to aMember</title>
			<hookname>profile_updatepassword_start</hookname>
			<phpcode><![CDATA[if ($vbulletin->userinfo['amemberid']){
  $vbulletin->url = $vbulletin->options['amemberurl'] . "/profile.php";
  eval(print_standard_redirect('redirect_amember_profile', true, true));  
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Redirect user to aMember signup page if configured</title>
			<hookname>register_start</hookname>
			<phpcode><![CDATA[if ($vbulletin->options['amember_allow_signup']){
  $vbulletin->url = $vbulletin->options['amemberurl_signup'];
     eval(print_standard_redirect('redirect_amember_signup', true, true));  
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>During startup - set session user_id from aMember if possible and reload</title>
			<hookname>style_fetch</hookname>
			<phpcode><![CDATA[function check_amember_login(){
/** Check if aMember session exists
    then load corresponding vB user record
    make sure username and password matches in aMember and vB
    then set corresponding userid in vB session table before it is loaded
*/
    if(preg_match("/css\.php$/", $_SERVER[SCRIPT_NAME])){
	return; 
    }
                
    global $vbulletin, $languageid;
    if ($vbulletin->userinfo['userid'] > 0) return;

    session_start();
    require_once(CWD . '/includes/functions_login.php');
    if ($_amember_user = $_SESSION['_amember_user']){
        // fetch related vBulletin user
        $u = $vbulletin->db->query_first_slave("
            SELECT userid FROM " . TABLE_PREFIX . "user 
            WHERE amemberid = ". intval($_amember_user['member_id'])
        );
        if (!$u['userid']) return false;
        $languageid = intval($languageid);
        $useroptions = (defined('IN_CONTROL_PANEL') ? 16 : 0) + (defined('AVATAR_ON_NAVBAR') ? 2 : 0);
        $userinfo = fetch_userinfo($u['userid'], $useroptions, $languageid);
        if (!$userinfo['amemberid']) return false;
        /// we have userinfo here, lets compare passwords
        if (strcasecmp($userinfo['username'], $_amember_user['login'])) return;
        if (md5(md5($_amember_user['pass']). $userinfo['salt']) != $userinfo['password']) return;
        $strikes = verify_strike_status($userinfo['username']);
        // TODO: check for ban, strikes, etc.
        // user verified, set session
        $vbulletin->userinfo = $userinfo;
        process_new_login($logintype='', $userinfo['username'], $cssprefs='');
        
        exec_header_redirect($_SERVER['PHP_SELF'] . ($_SERVER['QUERY_STRING'] ? "?".$_SERVER['QUERY_STRING'] : "") . $vbulletin->session->vars['sessionurl']);
    }
}

function check_amember_cookies2(){
    $l = $_COOKIE['_amember_ru']; //login
    $p = $_COOKIE['_amember_rp']; //md5(pass)
    if (!strlen($l) || !strlen($p)) return;
    if(preg_match("/css\.php$/", $_SERVER[SCRIPT_NAME])){
	return;
    }
    global $vbulletin, $languageid, $db;
    if ($vbulletin->userinfo['userid'] > 0) return;

    require_once(CWD . '/includes/functions_login.php');
    // fetch related vBulletin user
    $u = $vbulletin->db->query_first_slave("
        SELECT userid FROM ".TABLE_PREFIX."user
        WHERE username = '". $db->escape_string($l) . "'
            AND amemberid > 0"
    );
    if (!$u['userid']) return false;
    $languageid = intval($languageid);
    $useroptions = (defined('IN_CONTROL_PANEL') ? 16 : 0) + (defined('AVATAR_ON_NAVBAR') ? 2 : 0);
    $userinfo = fetch_userinfo($u['userid'], $useroptions, $languageid);
    if (!$userinfo['amemberid']) return false;
    /// we have userinfo here, lets compare passwords
    if (md5($p . $userinfo['salt']) != $userinfo['password']) return;
    $strikes = verify_strike_status($userinfo['username']);
    $vbulletin->userinfo = $userinfo;
    process_new_login($logintype='', $userinfo['username'], $cssprefs='');
    
    exec_header_redirect($_SERVER['PHP_SELF'] . ($_SERVER['QUERY_STRING'] ? "?".$_SERVER['QUERY_STRING'] : "") . $vbulletin->session->vars['sessionurl']);
}

check_amember_login();
check_amember_cookies2();

/** Disable lost password - make redirect **/
if ($_REQUEST['do'] == 'lostpw'){
  $vbulletin->url =        
      $vbulletin->options['amemberurl'].
      '/login.php?amember_redirect_url='.
      $vbulletin->options['bburl'];
  exec_header_redirect($vbulletin->url);
};]]></phpcode>
		</plugin>
	</plugins>
	<phrases>
		<phrasetype name="Front-End Redirect Messages" fieldname="frontredirect">
			<phrase name="amember_login" date="1156320734" username="test" version="1.0"><![CDATA[Redirecting you to aMember Profile editing page to change password]]></phrase>
			<phrase name="amember_logout" date="1155899904" username="test" version="1.0"><![CDATA[You are logged-out.]]></phrase>
			<phrase name="amember_profile" date="1155897058" username="test" version="1.0"><![CDATA[Redirecting you to aMember Profile editing page to change password]]></phrase>
			<phrase name="amember_signup" date="1156160375" username="test" version="1.0"><![CDATA[Redirecting you to aMember signup page for registration]]></phrase>
		</phrasetype>
		<phrasetype name="vBulletin Settings" fieldname="vbsettings">
			<phrase name="setting_amember_allow_signup_desc" date="1156244352" username="test" version="1.0"><![CDATA[this option is recommeneded, if you want to still provide free registrations for the forum, you can easily configure it in aMember Pro - create a free product with corresponding "vBulletin3 Access" field value.
Disable this only if you understand what you are doing.]]></phrase>
			<phrase name="setting_amember_allow_signup_title" date="1156244352" username="test" version="1.0"><![CDATA[Redirect all registrations to aMember]]></phrase>
			<phrase name="setting_amemberurl_desc" date="1155639560" username="test" version="1.0.0"><![CDATA[Root URL of aMember Pro script, you may find it at aMember CP -> Setup : Root URL. Sample values: "/amember" or "http://www.yoursite.com/amember". No trailing slash!]]></phrase>
			<phrase name="setting_amemberurl_signup_desc" date="1156244344" username="test" version="1.0"><![CDATA[URL for new users registrations, if different from default 
/amember/signup.php]]></phrase>
			<phrase name="setting_amemberurl_signup_title" date="1156244344" username="test" version="1.0"><![CDATA[aMember Signup URL]]></phrase>
			<phrase name="setting_amemberurl_title" date="1155639560" username="test" version="1.0.0"><![CDATA[aMember Root URL]]></phrase>
			<phrase name="settinggroup_amember" date="1155639470" username="test" version="1.0.0"><![CDATA[aMember Pro Integration]]></phrase>
		</phrasetype>
	</phrases>
	<options>
		<settinggroup name="amember" displayorder="2000">
			<setting varname="amemberurl" displayorder="10">
				<datatype>free</datatype>
				<defaultvalue>/amember</defaultvalue>
			</setting>
			<setting varname="amemberurl_signup" displayorder="20">
				<datatype>free</datatype>
				<defaultvalue>/amember/signup.php</defaultvalue>
			</setting>
			<setting varname="amember_allow_signup" displayorder="30">
				<datatype>free</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>1</defaultvalue>
			</setting>
		</settinggroup>
	</options>
	<helptopics>
	</helptopics>
	<cronentries>
	</cronentries>
	<faqentries>
	</faqentries>
</product>
